2023-12-15 11:15:18,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-15 11:15:18,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-15 11:15:18,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-15 11:15:18,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-15 11:15:21,293:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\numba\core\decorators.py:262: NumbaDeprecationWarning: [1mnumba.generated_jit is deprecated. Please see the documentation at: https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-generated-jit for more information and advice on a suitable replacement.[0m
  warnings.warn(msg, NumbaDeprecationWarning)

2023-12-15 11:15:21,324:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\visions\backends\shared\nan_handling.py:51: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def hasna(x: np.ndarray) -> bool:

2023-12-15 11:15:21,749:WARNING:C:\Users\Selman\AppData\Local\Temp\ipykernel_20188\1748073771.py:3: DeprecationWarning: `import pandas_profiling` is going to be deprecated by April 1st. Please use `import ydata_profiling` instead.
  from pandas_profiling import ProfileReport

2023-12-15 11:19:51,832:INFO:PyCaret ClassificationExperiment
2023-12-15 11:19:51,833:INFO:Logging name: clf-default-name
2023-12-15 11:19:51,833:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-15 11:19:51,833:INFO:version 3.2.0
2023-12-15 11:19:51,833:INFO:Initializing setup()
2023-12-15 11:19:51,833:INFO:self.USI: 261e
2023-12-15 11:19:51,833:INFO:self._variable_keys: {'_ml_usecase', 'y_test', 'fold_groups_param', 'log_plots_param', 'is_multiclass', 'target_param', 'logging_param', 'pipeline', 'html_param', 'fold_generator', 'exp_name_log', 'n_jobs_param', 'X_train', 'data', 'exp_id', 'y', 'fix_imbalance', 'X', 'fold_shuffle_param', '_available_plots', 'X_test', 'memory', 'USI', 'idx', 'y_train', 'gpu_param', 'gpu_n_jobs_param', 'seed'}
2023-12-15 11:19:51,834:INFO:Checking environment
2023-12-15 11:19:51,834:INFO:python_version: 3.9.13
2023-12-15 11:19:51,834:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-15 11:19:51,834:INFO:machine: AMD64
2023-12-15 11:19:51,834:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-15 11:19:51,834:INFO:Memory: svmem(total=8356814848, available=1808486400, percent=78.4, used=6548328448, free=1808486400)
2023-12-15 11:19:51,834:INFO:Physical Core: 4
2023-12-15 11:19:51,834:INFO:Logical Core: 8
2023-12-15 11:19:51,834:INFO:Checking libraries
2023-12-15 11:19:51,834:INFO:System:
2023-12-15 11:19:51,834:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-15 11:19:51,834:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-12-15 11:19:51,835:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-15 11:19:51,835:INFO:PyCaret required dependencies:
2023-12-15 11:19:52,116:INFO:                 pip: 22.2.2
2023-12-15 11:19:52,116:INFO:          setuptools: 69.0.2
2023-12-15 11:19:52,116:INFO:             pycaret: 3.1.0
2023-12-15 11:19:52,116:INFO:             IPython: 7.31.1
2023-12-15 11:19:52,116:INFO:          ipywidgets: 7.6.5
2023-12-15 11:19:52,116:INFO:                tqdm: 4.64.1
2023-12-15 11:19:52,116:INFO:               numpy: 1.21.5
2023-12-15 11:19:52,116:INFO:              pandas: 1.4.4
2023-12-15 11:19:52,116:INFO:              jinja2: 2.11.3
2023-12-15 11:19:52,116:INFO:               scipy: 1.10.1
2023-12-15 11:19:52,116:INFO:              joblib: 1.1.0
2023-12-15 11:19:52,116:INFO:             sklearn: 1.2.2
2023-12-15 11:19:52,116:INFO:                pyod: 1.1.1
2023-12-15 11:19:52,116:INFO:            imblearn: 0.11.0
2023-12-15 11:19:52,116:INFO:   category_encoders: 2.6.3
2023-12-15 11:19:52,116:INFO:            lightgbm: 4.0.0
2023-12-15 11:19:52,116:INFO:               numba: 0.55.1
2023-12-15 11:19:52,116:INFO:            requests: 2.28.1
2023-12-15 11:19:52,116:INFO:          matplotlib: 3.5.2
2023-12-15 11:19:52,116:INFO:          scikitplot: 0.3.7
2023-12-15 11:19:52,116:INFO:         yellowbrick: 1.5
2023-12-15 11:19:52,116:INFO:              plotly: 5.9.0
2023-12-15 11:19:52,116:INFO:    plotly-resampler: Not installed
2023-12-15 11:19:52,116:INFO:             kaleido: 0.2.1
2023-12-15 11:19:52,116:INFO:           schemdraw: 0.15
2023-12-15 11:19:52,116:INFO:         statsmodels: 0.13.2
2023-12-15 11:19:52,116:INFO:              sktime: 0.21.1
2023-12-15 11:19:52,116:INFO:               tbats: 1.1.3
2023-12-15 11:19:52,116:INFO:            pmdarima: 2.0.4
2023-12-15 11:19:52,116:INFO:              psutil: 5.9.0
2023-12-15 11:19:52,116:INFO:          markupsafe: 2.0.1
2023-12-15 11:19:52,116:INFO:             pickle5: Not installed
2023-12-15 11:19:52,116:INFO:         cloudpickle: 2.0.0
2023-12-15 11:19:52,116:INFO:         deprecation: 2.1.0
2023-12-15 11:19:52,116:INFO:              xxhash: 3.4.1
2023-12-15 11:19:52,116:INFO:           wurlitzer: Not installed
2023-12-15 11:19:52,116:INFO:PyCaret optional dependencies:
2023-12-15 11:19:52,132:INFO:                shap: Not installed
2023-12-15 11:19:52,132:INFO:           interpret: Not installed
2023-12-15 11:19:52,132:INFO:                umap: Not installed
2023-12-15 11:19:52,132:INFO:     ydata_profiling: 4.5.1
2023-12-15 11:19:52,132:INFO:  explainerdashboard: Not installed
2023-12-15 11:19:52,132:INFO:             autoviz: Not installed
2023-12-15 11:19:52,132:INFO:           fairlearn: Not installed
2023-12-15 11:19:52,132:INFO:          deepchecks: Not installed
2023-12-15 11:19:52,132:INFO:             xgboost: 1.7.6
2023-12-15 11:19:52,132:INFO:            catboost: 1.2
2023-12-15 11:19:52,132:INFO:              kmodes: Not installed
2023-12-15 11:19:52,132:INFO:             mlxtend: Not installed
2023-12-15 11:19:52,132:INFO:       statsforecast: Not installed
2023-12-15 11:19:52,132:INFO:        tune_sklearn: Not installed
2023-12-15 11:19:52,132:INFO:                 ray: Not installed
2023-12-15 11:19:52,132:INFO:            hyperopt: Not installed
2023-12-15 11:19:52,132:INFO:              optuna: Not installed
2023-12-15 11:19:52,132:INFO:               skopt: Not installed
2023-12-15 11:19:52,132:INFO:              mlflow: Not installed
2023-12-15 11:19:52,132:INFO:              gradio: Not installed
2023-12-15 11:19:52,132:INFO:             fastapi: Not installed
2023-12-15 11:19:52,132:INFO:             uvicorn: Not installed
2023-12-15 11:19:52,132:INFO:              m2cgen: Not installed
2023-12-15 11:19:52,132:INFO:           evidently: Not installed
2023-12-15 11:19:52,132:INFO:               fugue: Not installed
2023-12-15 11:19:52,132:INFO:           streamlit: Not installed
2023-12-15 11:19:52,132:INFO:             prophet: 1.1.5
2023-12-15 11:19:52,132:INFO:None
2023-12-15 11:19:52,132:INFO:Set up data.
2023-12-15 11:19:52,132:INFO:Set up folding strategy.
2023-12-15 11:19:52,132:INFO:Set up train/test split.
2023-12-15 11:19:52,148:INFO:Set up index.
2023-12-15 11:19:52,148:INFO:Assigning column types.
2023-12-15 11:19:52,148:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-15 11:19:52,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-15 11:19:52,195:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-15 11:19:52,251:INFO:Soft dependency imported: xgboost: 1.7.6
2023-12-15 11:19:52,313:INFO:Soft dependency imported: catboost: 1.2
2023-12-15 11:19:52,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-15 11:19:52,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-15 11:19:52,497:INFO:Soft dependency imported: xgboost: 1.7.6
2023-12-15 11:19:52,500:INFO:Soft dependency imported: catboost: 1.2
2023-12-15 11:19:52,501:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-15 11:19:52,575:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-15 11:19:52,609:INFO:Soft dependency imported: xgboost: 1.7.6
2023-12-15 11:19:52,613:INFO:Soft dependency imported: catboost: 1.2
2023-12-15 11:19:52,670:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-15 11:19:52,732:INFO:Soft dependency imported: xgboost: 1.7.6
2023-12-15 11:19:52,737:INFO:Soft dependency imported: catboost: 1.2
2023-12-15 11:19:52,737:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-15 11:19:52,833:INFO:Soft dependency imported: xgboost: 1.7.6
2023-12-15 11:19:52,837:INFO:Soft dependency imported: catboost: 1.2
2023-12-15 11:19:52,931:INFO:Soft dependency imported: xgboost: 1.7.6
2023-12-15 11:19:52,934:INFO:Soft dependency imported: catboost: 1.2
2023-12-15 11:19:52,939:INFO:Preparing preprocessing pipeline...
2023-12-15 11:19:52,940:INFO:Set up label encoding.
2023-12-15 11:19:52,940:INFO:Set up simple imputation.
2023-12-15 11:19:52,968:INFO:Finished creating preprocessing pipeline.
2023-12-15 11:19:52,982:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Selman\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-12-15 11:19:52,982:INFO:Creating final display dataframe.
2023-12-15 11:19:53,080:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                8658  
1                                             species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (147, 5)  
5                                            (147, 5)  
6                                            (102, 5)  
7                                             (45, 5)  
8                                                   4  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               261e  
2023-12-15 11:19:53,229:INFO:Soft dependency imported: xgboost: 1.7.6
2023-12-15 11:19:53,233:INFO:Soft dependency imported: catboost: 1.2
2023-12-15 11:19:53,366:INFO:Soft dependency imported: xgboost: 1.7.6
2023-12-15 11:19:53,366:INFO:Soft dependency imported: catboost: 1.2
2023-12-15 11:19:53,366:INFO:setup() successfully completed in 1.54s...............
2023-12-15 11:20:06,629:INFO:Initializing compare_models()
2023-12-15 11:20:06,629:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-15 11:20:06,629:INFO:Checking exceptions
2023-12-15 11:20:06,635:INFO:Preparing display monitor
2023-12-15 11:20:06,700:INFO:Initializing Logistic Regression
2023-12-15 11:20:06,700:INFO:Total runtime is 0.0 minutes
2023-12-15 11:20:06,711:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:06,711:INFO:Initializing create_model()
2023-12-15 11:20:06,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:06,711:INFO:Checking exceptions
2023-12-15 11:20:06,711:INFO:Importing libraries
2023-12-15 11:20:06,712:INFO:Copying training dataset
2023-12-15 11:20:06,717:INFO:Defining folds
2023-12-15 11:20:06,718:INFO:Declaring metric variables
2023-12-15 11:20:06,724:INFO:Importing untrained model
2023-12-15 11:20:06,734:INFO:Logistic Regression Imported successfully
2023-12-15 11:20:06,759:INFO:Starting cross validation
2023-12-15 11:20:06,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:18,559:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,566:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,576:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,609:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,618:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,627:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,648:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,651:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,660:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,662:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,666:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,670:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,830:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,843:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,861:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,892:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,899:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,907:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,909:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,912:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,915:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,922:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,924:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:18,928:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,061:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,066:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,070:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,145:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,150:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,152:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,160:INFO:Calculating mean and std
2023-12-15 11:20:19,168:INFO:Creating metrics dataframe
2023-12-15 11:20:19,184:INFO:Uploading results into container
2023-12-15 11:20:19,185:INFO:Uploading model into container now
2023-12-15 11:20:19,186:INFO:_master_model_container: 1
2023-12-15 11:20:19,186:INFO:_display_container: 2
2023-12-15 11:20:19,187:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8658, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-15 11:20:19,188:INFO:create_model() successfully completed......................................
2023-12-15 11:20:19,497:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:19,497:INFO:Creating metrics dataframe
2023-12-15 11:20:19,520:INFO:Initializing K Neighbors Classifier
2023-12-15 11:20:19,521:INFO:Total runtime is 0.21368592182795207 minutes
2023-12-15 11:20:19,529:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:19,529:INFO:Initializing create_model()
2023-12-15 11:20:19,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:19,530:INFO:Checking exceptions
2023-12-15 11:20:19,530:INFO:Importing libraries
2023-12-15 11:20:19,530:INFO:Copying training dataset
2023-12-15 11:20:19,543:INFO:Defining folds
2023-12-15 11:20:19,543:INFO:Declaring metric variables
2023-12-15 11:20:19,551:INFO:Importing untrained model
2023-12-15 11:20:19,562:INFO:K Neighbors Classifier Imported successfully
2023-12-15 11:20:19,580:INFO:Starting cross validation
2023-12-15 11:20:19,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:19,760:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,760:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,762:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,762:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,765:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,766:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,784:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,786:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,788:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,788:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,790:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,794:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,795:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,795:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,795:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,796:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,797:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,799:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,800:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,800:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,801:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,801:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,802:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,811:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,908:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,909:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,913:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,914:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,918:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,919:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:19,938:INFO:Calculating mean and std
2023-12-15 11:20:19,943:INFO:Creating metrics dataframe
2023-12-15 11:20:19,951:INFO:Uploading results into container
2023-12-15 11:20:19,951:INFO:Uploading model into container now
2023-12-15 11:20:19,952:INFO:_master_model_container: 2
2023-12-15 11:20:19,952:INFO:_display_container: 2
2023-12-15 11:20:19,952:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-15 11:20:19,953:INFO:create_model() successfully completed......................................
2023-12-15 11:20:20,103:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:20,103:INFO:Creating metrics dataframe
2023-12-15 11:20:20,123:INFO:Initializing Naive Bayes
2023-12-15 11:20:20,124:INFO:Total runtime is 0.22374749978383382 minutes
2023-12-15 11:20:20,129:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:20,129:INFO:Initializing create_model()
2023-12-15 11:20:20,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:20,130:INFO:Checking exceptions
2023-12-15 11:20:20,130:INFO:Importing libraries
2023-12-15 11:20:20,130:INFO:Copying training dataset
2023-12-15 11:20:20,140:INFO:Defining folds
2023-12-15 11:20:20,141:INFO:Declaring metric variables
2023-12-15 11:20:20,151:INFO:Importing untrained model
2023-12-15 11:20:20,162:INFO:Naive Bayes Imported successfully
2023-12-15 11:20:20,185:INFO:Starting cross validation
2023-12-15 11:20:20,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:20,288:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,302:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,303:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,308:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,311:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,314:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,315:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,319:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,321:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,322:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,323:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,323:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,330:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,332:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,336:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,340:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,340:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,362:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,369:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,382:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,386:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,391:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,394:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,412:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,415:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,418:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,423:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,431:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,433:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,435:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,453:INFO:Calculating mean and std
2023-12-15 11:20:20,458:INFO:Creating metrics dataframe
2023-12-15 11:20:20,466:INFO:Uploading results into container
2023-12-15 11:20:20,467:INFO:Uploading model into container now
2023-12-15 11:20:20,468:INFO:_master_model_container: 3
2023-12-15 11:20:20,468:INFO:_display_container: 2
2023-12-15 11:20:20,468:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-15 11:20:20,468:INFO:create_model() successfully completed......................................
2023-12-15 11:20:20,656:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:20,657:INFO:Creating metrics dataframe
2023-12-15 11:20:20,688:INFO:Initializing Decision Tree Classifier
2023-12-15 11:20:20,689:INFO:Total runtime is 0.23315446376800536 minutes
2023-12-15 11:20:20,698:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:20,698:INFO:Initializing create_model()
2023-12-15 11:20:20,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:20,699:INFO:Checking exceptions
2023-12-15 11:20:20,699:INFO:Importing libraries
2023-12-15 11:20:20,700:INFO:Copying training dataset
2023-12-15 11:20:20,713:INFO:Defining folds
2023-12-15 11:20:20,713:INFO:Declaring metric variables
2023-12-15 11:20:20,721:INFO:Importing untrained model
2023-12-15 11:20:20,733:INFO:Decision Tree Classifier Imported successfully
2023-12-15 11:20:20,756:INFO:Starting cross validation
2023-12-15 11:20:20,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:20,861:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,864:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,866:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,869:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,872:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,873:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,875:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,875:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,881:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,881:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,881:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,881:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,883:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,887:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,890:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,899:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,904:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,906:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,911:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,914:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,921:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,922:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,928:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,952:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,954:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,956:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,956:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,959:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,960:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:20,968:INFO:Calculating mean and std
2023-12-15 11:20:20,973:INFO:Creating metrics dataframe
2023-12-15 11:20:20,985:INFO:Uploading results into container
2023-12-15 11:20:20,988:INFO:Uploading model into container now
2023-12-15 11:20:20,988:INFO:_master_model_container: 4
2023-12-15 11:20:20,988:INFO:_display_container: 2
2023-12-15 11:20:20,988:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8658, splitter='best')
2023-12-15 11:20:20,990:INFO:create_model() successfully completed......................................
2023-12-15 11:20:21,196:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:21,196:INFO:Creating metrics dataframe
2023-12-15 11:20:21,235:INFO:Initializing SVM - Linear Kernel
2023-12-15 11:20:21,236:INFO:Total runtime is 0.24226733048756915 minutes
2023-12-15 11:20:21,247:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:21,248:INFO:Initializing create_model()
2023-12-15 11:20:21,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:21,249:INFO:Checking exceptions
2023-12-15 11:20:21,249:INFO:Importing libraries
2023-12-15 11:20:21,249:INFO:Copying training dataset
2023-12-15 11:20:21,263:INFO:Defining folds
2023-12-15 11:20:21,263:INFO:Declaring metric variables
2023-12-15 11:20:21,274:INFO:Importing untrained model
2023-12-15 11:20:21,287:INFO:SVM - Linear Kernel Imported successfully
2023-12-15 11:20:21,310:INFO:Starting cross validation
2023-12-15 11:20:21,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:21,446:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,446:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,446:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,451:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

s usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,451:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,451:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,451:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,455:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,456:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,458:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,459:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,459:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,459:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,461:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,463:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,464:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,470:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,471:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,471:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,473:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,473:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,474:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,475:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,474:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,477:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,478:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,484:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,480:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,487:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,489:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,494:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,557:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,557:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-15 11:20:21,561:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,561:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,565:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,565:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,570:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,571:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,594:INFO:Calculating mean and std
2023-12-15 11:20:21,599:INFO:Creating metrics dataframe
2023-12-15 11:20:21,608:INFO:Uploading results into container
2023-12-15 11:20:21,610:INFO:Uploading model into container now
2023-12-15 11:20:21,611:INFO:_master_model_container: 5
2023-12-15 11:20:21,611:INFO:_display_container: 2
2023-12-15 11:20:21,612:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8658, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-15 11:20:21,614:INFO:create_model() successfully completed......................................
2023-12-15 11:20:21,816:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:21,816:INFO:Creating metrics dataframe
2023-12-15 11:20:21,848:INFO:Initializing Ridge Classifier
2023-12-15 11:20:21,848:INFO:Total runtime is 0.2524664084116618 minutes
2023-12-15 11:20:21,854:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:21,855:INFO:Initializing create_model()
2023-12-15 11:20:21,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:21,856:INFO:Checking exceptions
2023-12-15 11:20:21,856:INFO:Importing libraries
2023-12-15 11:20:21,857:INFO:Copying training dataset
2023-12-15 11:20:21,864:INFO:Defining folds
2023-12-15 11:20:21,865:INFO:Declaring metric variables
2023-12-15 11:20:21,872:INFO:Importing untrained model
2023-12-15 11:20:21,887:INFO:Ridge Classifier Imported successfully
2023-12-15 11:20:21,908:INFO:Starting cross validation
2023-12-15 11:20:21,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:21,990:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:21,992:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:21,996:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,998:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:21,999:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:22,000:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:22,001:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:22,003:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:22,004:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,005:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,005:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,005:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:22,006:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,006:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,008:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,009:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,012:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,014:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:22,015:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,015:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,019:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,020:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,020:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,022:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,022:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,022:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,025:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,033:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,033:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,059:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:22,060:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-15 11:20:22,061:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,061:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,063:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,063:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,067:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,068:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:22,077:INFO:Calculating mean and std
2023-12-15 11:20:22,081:INFO:Creating metrics dataframe
2023-12-15 11:20:22,089:INFO:Uploading results into container
2023-12-15 11:20:22,090:INFO:Uploading model into container now
2023-12-15 11:20:22,090:INFO:_master_model_container: 6
2023-12-15 11:20:22,090:INFO:_display_container: 2
2023-12-15 11:20:22,091:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8658, solver='auto',
                tol=0.0001)
2023-12-15 11:20:22,091:INFO:create_model() successfully completed......................................
2023-12-15 11:20:22,233:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:22,233:INFO:Creating metrics dataframe
2023-12-15 11:20:22,254:INFO:Initializing Random Forest Classifier
2023-12-15 11:20:22,254:INFO:Total runtime is 0.25924208561579387 minutes
2023-12-15 11:20:22,266:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:22,268:INFO:Initializing create_model()
2023-12-15 11:20:22,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:22,269:INFO:Checking exceptions
2023-12-15 11:20:22,269:INFO:Importing libraries
2023-12-15 11:20:22,270:INFO:Copying training dataset
2023-12-15 11:20:22,283:INFO:Defining folds
2023-12-15 11:20:22,284:INFO:Declaring metric variables
2023-12-15 11:20:22,295:INFO:Importing untrained model
2023-12-15 11:20:22,307:INFO:Random Forest Classifier Imported successfully
2023-12-15 11:20:22,324:INFO:Starting cross validation
2023-12-15 11:20:22,325:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:23,004:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,008:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,012:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,013:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,016:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,017:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,019:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,019:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,020:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,025:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,026:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,030:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,032:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,035:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,036:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,071:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,073:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,079:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,085:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,087:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,090:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,093:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,099:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,103:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,601:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,607:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,613:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,614:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,619:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,626:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:23,645:INFO:Calculating mean and std
2023-12-15 11:20:23,649:INFO:Creating metrics dataframe
2023-12-15 11:20:23,656:INFO:Uploading results into container
2023-12-15 11:20:23,657:INFO:Uploading model into container now
2023-12-15 11:20:23,657:INFO:_master_model_container: 7
2023-12-15 11:20:23,657:INFO:_display_container: 2
2023-12-15 11:20:23,658:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8658, verbose=0, warm_start=False)
2023-12-15 11:20:23,658:INFO:create_model() successfully completed......................................
2023-12-15 11:20:23,828:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:23,828:INFO:Creating metrics dataframe
2023-12-15 11:20:23,861:INFO:Initializing Quadratic Discriminant Analysis
2023-12-15 11:20:23,861:INFO:Total runtime is 0.2860222617785136 minutes
2023-12-15 11:20:23,870:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:23,870:INFO:Initializing create_model()
2023-12-15 11:20:23,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:23,870:INFO:Checking exceptions
2023-12-15 11:20:23,872:INFO:Importing libraries
2023-12-15 11:20:23,872:INFO:Copying training dataset
2023-12-15 11:20:23,885:INFO:Defining folds
2023-12-15 11:20:23,886:INFO:Declaring metric variables
2023-12-15 11:20:23,896:INFO:Importing untrained model
2023-12-15 11:20:23,909:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-15 11:20:23,928:INFO:Starting cross validation
2023-12-15 11:20:23,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:24,033:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,040:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,041:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,043:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,049:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,051:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,053:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,055:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,058:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,049:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,061:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,062:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,062:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,063:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,065:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,067:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,070:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,075:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,078:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,079:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,081:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,095:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,098:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,100:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,116:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,117:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,119:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,121:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,125:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,127:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,143:INFO:Calculating mean and std
2023-12-15 11:20:24,146:INFO:Creating metrics dataframe
2023-12-15 11:20:24,154:INFO:Uploading results into container
2023-12-15 11:20:24,155:INFO:Uploading model into container now
2023-12-15 11:20:24,155:INFO:_master_model_container: 8
2023-12-15 11:20:24,156:INFO:_display_container: 2
2023-12-15 11:20:24,156:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-15 11:20:24,157:INFO:create_model() successfully completed......................................
2023-12-15 11:20:24,351:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:24,351:INFO:Creating metrics dataframe
2023-12-15 11:20:24,391:INFO:Initializing Ada Boost Classifier
2023-12-15 11:20:24,392:INFO:Total runtime is 0.29486305316289263 minutes
2023-12-15 11:20:24,399:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:24,399:INFO:Initializing create_model()
2023-12-15 11:20:24,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:24,399:INFO:Checking exceptions
2023-12-15 11:20:24,399:INFO:Importing libraries
2023-12-15 11:20:24,400:INFO:Copying training dataset
2023-12-15 11:20:24,411:INFO:Defining folds
2023-12-15 11:20:24,411:INFO:Declaring metric variables
2023-12-15 11:20:24,420:INFO:Importing untrained model
2023-12-15 11:20:24,431:INFO:Ada Boost Classifier Imported successfully
2023-12-15 11:20:24,452:INFO:Starting cross validation
2023-12-15 11:20:24,453:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:24,772:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,779:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,786:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,787:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,791:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,791:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,796:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,801:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,803:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,805:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,808:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,812:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,845:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,849:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,856:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,856:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,861:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,861:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,874:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,878:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,878:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,881:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:24,888:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:25,009:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:25,014:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:25,018:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:25,038:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:25,045:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:25,051:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:25,076:INFO:Calculating mean and std
2023-12-15 11:20:25,081:INFO:Creating metrics dataframe
2023-12-15 11:20:25,089:INFO:Uploading results into container
2023-12-15 11:20:25,090:INFO:Uploading model into container now
2023-12-15 11:20:25,090:INFO:_master_model_container: 9
2023-12-15 11:20:25,090:INFO:_display_container: 2
2023-12-15 11:20:25,092:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8658)
2023-12-15 11:20:25,092:INFO:create_model() successfully completed......................................
2023-12-15 11:20:25,259:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:25,260:INFO:Creating metrics dataframe
2023-12-15 11:20:25,311:INFO:Initializing Gradient Boosting Classifier
2023-12-15 11:20:25,312:INFO:Total runtime is 0.31021508375803625 minutes
2023-12-15 11:20:25,323:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:25,324:INFO:Initializing create_model()
2023-12-15 11:20:25,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:25,325:INFO:Checking exceptions
2023-12-15 11:20:25,325:INFO:Importing libraries
2023-12-15 11:20:25,325:INFO:Copying training dataset
2023-12-15 11:20:25,337:INFO:Defining folds
2023-12-15 11:20:25,338:INFO:Declaring metric variables
2023-12-15 11:20:25,349:INFO:Importing untrained model
2023-12-15 11:20:25,361:INFO:Gradient Boosting Classifier Imported successfully
2023-12-15 11:20:25,375:INFO:Starting cross validation
2023-12-15 11:20:25,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:26,111:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,118:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,126:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,144:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,145:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,150:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,151:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,156:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,157:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,200:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,206:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,209:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,213:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,218:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,222:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,278:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,288:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,294:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,295:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,296:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,302:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,308:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,309:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,313:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,753:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,757:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,762:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,808:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,815:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,819:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:26,837:INFO:Calculating mean and std
2023-12-15 11:20:26,840:INFO:Creating metrics dataframe
2023-12-15 11:20:26,851:INFO:Uploading results into container
2023-12-15 11:20:26,853:INFO:Uploading model into container now
2023-12-15 11:20:26,853:INFO:_master_model_container: 10
2023-12-15 11:20:26,854:INFO:_display_container: 2
2023-12-15 11:20:26,854:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8658, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-15 11:20:26,855:INFO:create_model() successfully completed......................................
2023-12-15 11:20:27,026:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:27,027:INFO:Creating metrics dataframe
2023-12-15 11:20:27,055:INFO:Initializing Linear Discriminant Analysis
2023-12-15 11:20:27,055:INFO:Total runtime is 0.33925162553787225 minutes
2023-12-15 11:20:27,066:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:27,066:INFO:Initializing create_model()
2023-12-15 11:20:27,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:27,066:INFO:Checking exceptions
2023-12-15 11:20:27,066:INFO:Importing libraries
2023-12-15 11:20:27,066:INFO:Copying training dataset
2023-12-15 11:20:27,075:INFO:Defining folds
2023-12-15 11:20:27,075:INFO:Declaring metric variables
2023-12-15 11:20:27,087:INFO:Importing untrained model
2023-12-15 11:20:27,093:INFO:Linear Discriminant Analysis Imported successfully
2023-12-15 11:20:27,112:INFO:Starting cross validation
2023-12-15 11:20:27,115:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:27,203:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,217:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,220:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,220:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,222:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,226:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,228:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,229:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,229:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,233:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,234:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,234:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,236:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,237:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,245:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,246:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,247:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,247:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,254:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,256:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,257:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,262:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,262:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,290:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,296:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,297:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,301:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,303:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,309:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:27,321:INFO:Calculating mean and std
2023-12-15 11:20:27,325:INFO:Creating metrics dataframe
2023-12-15 11:20:27,337:INFO:Uploading results into container
2023-12-15 11:20:27,338:INFO:Uploading model into container now
2023-12-15 11:20:27,339:INFO:_master_model_container: 11
2023-12-15 11:20:27,340:INFO:_display_container: 2
2023-12-15 11:20:27,341:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-15 11:20:27,341:INFO:create_model() successfully completed......................................
2023-12-15 11:20:27,476:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:27,476:INFO:Creating metrics dataframe
2023-12-15 11:20:27,493:INFO:Initializing Extra Trees Classifier
2023-12-15 11:20:27,493:INFO:Total runtime is 0.3465528806050618 minutes
2023-12-15 11:20:27,498:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:27,499:INFO:Initializing create_model()
2023-12-15 11:20:27,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:27,499:INFO:Checking exceptions
2023-12-15 11:20:27,499:INFO:Importing libraries
2023-12-15 11:20:27,500:INFO:Copying training dataset
2023-12-15 11:20:27,505:INFO:Defining folds
2023-12-15 11:20:27,505:INFO:Declaring metric variables
2023-12-15 11:20:27,511:INFO:Importing untrained model
2023-12-15 11:20:27,519:INFO:Extra Trees Classifier Imported successfully
2023-12-15 11:20:27,531:INFO:Starting cross validation
2023-12-15 11:20:27,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:28,106:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,111:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,116:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,118:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,125:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,127:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,166:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,172:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,178:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,179:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,186:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,192:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,193:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,200:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,201:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,204:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,210:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,215:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,339:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,344:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,351:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,351:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,356:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,359:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,631:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,637:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,647:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,655:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,664:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,671:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:28,696:INFO:Calculating mean and std
2023-12-15 11:20:28,700:INFO:Creating metrics dataframe
2023-12-15 11:20:28,714:INFO:Uploading results into container
2023-12-15 11:20:28,715:INFO:Uploading model into container now
2023-12-15 11:20:28,715:INFO:_master_model_container: 12
2023-12-15 11:20:28,716:INFO:_display_container: 2
2023-12-15 11:20:28,716:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8658, verbose=0, warm_start=False)
2023-12-15 11:20:28,717:INFO:create_model() successfully completed......................................
2023-12-15 11:20:28,893:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:28,894:INFO:Creating metrics dataframe
2023-12-15 11:20:28,927:INFO:Initializing Extreme Gradient Boosting
2023-12-15 11:20:28,927:INFO:Total runtime is 0.3704630851745605 minutes
2023-12-15 11:20:28,932:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:28,934:INFO:Initializing create_model()
2023-12-15 11:20:28,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:28,935:INFO:Checking exceptions
2023-12-15 11:20:28,935:INFO:Importing libraries
2023-12-15 11:20:28,936:INFO:Copying training dataset
2023-12-15 11:20:28,943:INFO:Defining folds
2023-12-15 11:20:28,943:INFO:Declaring metric variables
2023-12-15 11:20:28,948:INFO:Importing untrained model
2023-12-15 11:20:28,960:INFO:Extreme Gradient Boosting Imported successfully
2023-12-15 11:20:28,979:INFO:Starting cross validation
2023-12-15 11:20:28,981:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:29,205:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,211:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,220:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,229:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,234:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,237:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,238:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,239:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,242:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,245:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,246:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,246:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,246:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,247:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,248:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,251:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,253:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,255:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,261:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,263:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,264:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,264:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,270:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,320:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,325:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,328:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,331:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,334:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,339:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:29,353:INFO:Calculating mean and std
2023-12-15 11:20:29,357:INFO:Creating metrics dataframe
2023-12-15 11:20:29,366:INFO:Uploading results into container
2023-12-15 11:20:29,367:INFO:Uploading model into container now
2023-12-15 11:20:29,368:INFO:_master_model_container: 13
2023-12-15 11:20:29,368:INFO:_display_container: 2
2023-12-15 11:20:29,370:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-12-15 11:20:29,370:INFO:create_model() successfully completed......................................
2023-12-15 11:20:29,559:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:29,560:INFO:Creating metrics dataframe
2023-12-15 11:20:29,601:INFO:Initializing Light Gradient Boosting Machine
2023-12-15 11:20:29,601:INFO:Total runtime is 0.38168598016103106 minutes
2023-12-15 11:20:29,611:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:29,611:INFO:Initializing create_model()
2023-12-15 11:20:29,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:29,612:INFO:Checking exceptions
2023-12-15 11:20:29,612:INFO:Importing libraries
2023-12-15 11:20:29,612:INFO:Copying training dataset
2023-12-15 11:20:29,619:INFO:Defining folds
2023-12-15 11:20:29,619:INFO:Declaring metric variables
2023-12-15 11:20:29,629:INFO:Importing untrained model
2023-12-15 11:20:29,643:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-15 11:20:29,662:INFO:Starting cross validation
2023-12-15 11:20:29,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:30,265:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,268:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,271:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,326:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,334:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,335:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,338:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,339:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,348:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,367:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,372:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,378:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,409:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,412:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,420:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,443:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,447:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,452:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,464:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,472:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,477:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,478:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,484:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,491:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,685:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,687:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,690:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,692:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,695:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,698:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:30,713:INFO:Calculating mean and std
2023-12-15 11:20:30,720:INFO:Creating metrics dataframe
2023-12-15 11:20:30,728:INFO:Uploading results into container
2023-12-15 11:20:30,728:INFO:Uploading model into container now
2023-12-15 11:20:30,729:INFO:_master_model_container: 14
2023-12-15 11:20:30,729:INFO:_display_container: 2
2023-12-15 11:20:30,729:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8658, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-15 11:20:30,729:INFO:create_model() successfully completed......................................
2023-12-15 11:20:30,923:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:30,923:INFO:Creating metrics dataframe
2023-12-15 11:20:30,964:INFO:Initializing CatBoost Classifier
2023-12-15 11:20:30,965:INFO:Total runtime is 0.4044293006261189 minutes
2023-12-15 11:20:30,973:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:30,974:INFO:Initializing create_model()
2023-12-15 11:20:30,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:30,974:INFO:Checking exceptions
2023-12-15 11:20:30,974:INFO:Importing libraries
2023-12-15 11:20:30,975:INFO:Copying training dataset
2023-12-15 11:20:30,984:INFO:Defining folds
2023-12-15 11:20:30,984:INFO:Declaring metric variables
2023-12-15 11:20:30,992:INFO:Importing untrained model
2023-12-15 11:20:31,000:INFO:CatBoost Classifier Imported successfully
2023-12-15 11:20:31,020:INFO:Starting cross validation
2023-12-15 11:20:31,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:36,115:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,124:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,130:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,238:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,247:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,252:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,482:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,493:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,498:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,530:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,536:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,548:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,582:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,588:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,600:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,843:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,854:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,862:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,867:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,875:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,886:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,981:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,990:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:36,998:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,208:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,213:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,216:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,220:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,224:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,231:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,250:INFO:Calculating mean and std
2023-12-15 11:20:38,254:INFO:Creating metrics dataframe
2023-12-15 11:20:38,266:INFO:Uploading results into container
2023-12-15 11:20:38,267:INFO:Uploading model into container now
2023-12-15 11:20:38,267:INFO:_master_model_container: 15
2023-12-15 11:20:38,267:INFO:_display_container: 2
2023-12-15 11:20:38,268:INFO:<catboost.core.CatBoostClassifier object at 0x000002BEACB736A0>
2023-12-15 11:20:38,268:INFO:create_model() successfully completed......................................
2023-12-15 11:20:38,460:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:38,461:INFO:Creating metrics dataframe
2023-12-15 11:20:38,492:INFO:Initializing Dummy Classifier
2023-12-15 11:20:38,493:INFO:Total runtime is 0.5298953533172607 minutes
2023-12-15 11:20:38,503:INFO:SubProcess create_model() called ==================================
2023-12-15 11:20:38,503:INFO:Initializing create_model()
2023-12-15 11:20:38,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BEAE348E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:38,503:INFO:Checking exceptions
2023-12-15 11:20:38,503:INFO:Importing libraries
2023-12-15 11:20:38,504:INFO:Copying training dataset
2023-12-15 11:20:38,512:INFO:Defining folds
2023-12-15 11:20:38,513:INFO:Declaring metric variables
2023-12-15 11:20:38,523:INFO:Importing untrained model
2023-12-15 11:20:38,535:INFO:Dummy Classifier Imported successfully
2023-12-15 11:20:38,553:INFO:Starting cross validation
2023-12-15 11:20:38,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:20:38,619:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,627:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,627:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,630:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,630:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,634:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,636:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,637:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,637:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,638:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,640:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,641:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,641:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,643:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,644:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,648:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,648:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,649:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,654:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,659:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,663:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,665:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,667:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,668:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,668:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,672:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,673:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,675:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,675:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,677:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,688:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,695:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,697:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,700:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,703:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,710:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,713:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-15 11:20:38,716:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:20:38,734:INFO:Calculating mean and std
2023-12-15 11:20:38,738:INFO:Creating metrics dataframe
2023-12-15 11:20:38,747:INFO:Uploading results into container
2023-12-15 11:20:38,748:INFO:Uploading model into container now
2023-12-15 11:20:38,749:INFO:_master_model_container: 16
2023-12-15 11:20:38,749:INFO:_display_container: 2
2023-12-15 11:20:38,751:INFO:DummyClassifier(constant=None, random_state=8658, strategy='prior')
2023-12-15 11:20:38,751:INFO:create_model() successfully completed......................................
2023-12-15 11:20:38,941:INFO:SubProcess create_model() end ==================================
2023-12-15 11:20:38,942:INFO:Creating metrics dataframe
2023-12-15 11:20:39,009:INFO:Initializing create_model()
2023-12-15 11:20:39,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:20:39,010:INFO:Checking exceptions
2023-12-15 11:20:39,016:INFO:Importing libraries
2023-12-15 11:20:39,016:INFO:Copying training dataset
2023-12-15 11:20:39,025:INFO:Defining folds
2023-12-15 11:20:39,025:INFO:Declaring metric variables
2023-12-15 11:20:39,026:INFO:Importing untrained model
2023-12-15 11:20:39,027:INFO:Declaring custom model
2023-12-15 11:20:39,028:INFO:Linear Discriminant Analysis Imported successfully
2023-12-15 11:20:39,031:INFO:Cross validation set to False
2023-12-15 11:20:39,031:INFO:Fitting Model
2023-12-15 11:20:39,050:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-15 11:20:39,050:INFO:create_model() successfully completed......................................
2023-12-15 11:20:39,300:INFO:_master_model_container: 16
2023-12-15 11:20:39,300:INFO:_display_container: 2
2023-12-15 11:20:39,301:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-15 11:20:39,301:INFO:compare_models() successfully completed......................................
2023-12-15 11:21:26,237:INFO:Initializing create_model()
2023-12-15 11:21:26,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEAC5BD100>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-15 11:21:26,238:INFO:Checking exceptions
2023-12-15 11:21:26,298:INFO:Importing libraries
2023-12-15 11:21:26,298:INFO:Copying training dataset
2023-12-15 11:21:26,308:INFO:Defining folds
2023-12-15 11:21:26,309:INFO:Declaring metric variables
2023-12-15 11:21:26,321:INFO:Importing untrained model
2023-12-15 11:21:26,328:INFO:Linear Discriminant Analysis Imported successfully
2023-12-15 11:21:26,348:INFO:Starting cross validation
2023-12-15 11:21:26,351:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-15 11:21:26,409:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,409:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,424:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,442:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,444:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,445:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,447:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,448:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,449:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,449:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,452:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,453:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,458:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,475:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,476:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,478:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,479:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,481:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,482:WARNING:C:\Users\Selman\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-15 11:21:26,499:INFO:Calculating mean and std
2023-12-15 11:21:26,499:INFO:Creating metrics dataframe
2023-12-15 11:21:26,508:INFO:Finalizing model
2023-12-15 11:21:26,532:INFO:Uploading results into container
2023-12-15 11:21:26,534:INFO:Uploading model into container now
2023-12-15 11:21:26,561:INFO:_master_model_container: 17
2023-12-15 11:21:26,561:INFO:_display_container: 3
2023-12-15 11:21:26,562:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-15 11:21:26,562:INFO:create_model() successfully completed......................................
